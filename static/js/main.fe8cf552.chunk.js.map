{"version":3,"sources":["App.js","components/DateTimePretty.js","reportWebVitals.js","index.js"],"names":["DateTime","props","className","date","Component","VideoDate","title","src","url","frameborder","allow","allowfullscreen","moment","fromNow","VideoList","list","map","item","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAIA,SAASA,EAASC,GAChB,OACI,mBAAGC,UAAU,OAAb,SAAqBD,EAAME,OAmBjC,ICrBuCC,EDqBjCC,GCrBiCD,EDMvC,SAAeH,GACX,OACI,sBAAKC,UAAU,QAAf,UACO,wBACCI,MAAM,cACNC,IAAKN,EAAMO,IACXC,YAAY,IACZC,MAAM,4BACNC,iBAAe,IAEnB,cAACX,EAAD,CAAUG,KAAMF,EAAME,WCfhC,SAAqBF,GACnB,IAAME,EAAOS,IAAOX,EAAME,KAAM,gBAAgBU,UAChD,OAAO,cAACT,EAAD,CAAWI,IAAKP,EAAMO,IAAKL,KAAMA,MDoB5C,SAASW,EAAUb,GACf,OAAOA,EAAMc,KAAKC,KAAI,SAAAC,GAAI,OAAI,cAACZ,EAAD,CAAWG,IAAKS,EAAKT,IAAKL,KAAMc,EAAKd,UAGxD,SAASe,IACpB,MAAwBC,mBAAS,CAC7B,CACIX,IAAK,gFACLL,KAAM,uBAEV,CACIK,IAAK,gFACLL,KAAM,uBAEV,CACIK,IAAK,gFACLL,KAAM,uBAEV,CACIK,IAAK,gFACLL,KAAM,uBAEV,CACIK,IAAK,gFACLL,KAAM,uBAEV,CACIK,IAAK,gFACLL,KAAM,yBAvBd,mBAAOY,EAAP,UA2BA,OACI,cAACD,EAAD,CAAWC,KAAMA,IE5DzB,IAYeK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fe8cf552.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\nimport DateTimePretty from './components/DateTimePretty.js';\r\n\r\nfunction DateTime(props) {\r\n  return (\r\n      <p className=\"date\">{props.date}</p>\r\n  )\r\n}\r\n\r\nfunction Video(props) {\r\n    return (\r\n        <div className=\"video\">\r\n               <iframe\r\n                title=\"Video title\"\r\n                src={props.url}\r\n                frameborder=\"0\"\r\n                allow=\"autoplay; encrypted-media\"\r\n                allowfullscreen\r\n                 ></iframe>\r\n            <DateTime date={props.date} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst VideoDate = DateTimePretty(Video);\r\n\r\nfunction VideoList(props) {\r\n    return props.list.map(item => <VideoDate url={item.url} date={item.date} />);\r\n}\r\n\r\nexport default function App() {\r\n    const [list, setList] = useState([\r\n        {\r\n            url: 'https://www.youtube.com/embed/rN6nlNC9WQA?rel=0&amp;controls=0&amp;showinfo=0',\r\n            date: '2021-08-18 13:24:00'\r\n        },\r\n        {\r\n            url: 'https://www.youtube.com/embed/dVkK36KOcqs?rel=0&amp;controls=0&amp;showinfo=0',\r\n            date: '2021-08-13 12:24:00'\r\n        },\r\n        {\r\n            url: 'https://www.youtube.com/embed/xGRjCa49C6U?rel=0&amp;controls=0&amp;showinfo=0',\r\n            date: '2021-07-11 13:24:00'\r\n        },\r\n        {\r\n            url: 'https://www.youtube.com/embed/RK1K2bCg4J8?rel=0&amp;controls=0&amp;showinfo=0',\r\n            date: '2020-04-09 13:24:00'\r\n        },\r\n        {\r\n            url: 'https://www.youtube.com/embed/TKmGU77INaM?rel=0&amp;controls=0&amp;showinfo=0',\r\n            date: '2018-04-12 13:45:00'\r\n        },\r\n        {\r\n            url: 'https://www.youtube.com/embed/TxbE79-1OSI?rel=0&amp;controls=0&amp;showinfo=0',\r\n            date: '2021-08-17 13:22:00'\r\n        },\r\n    ]);\r\n\r\n    return (\r\n        <VideoList list={list} />\r\n    );\r\n}","import React from 'react';\r\nimport moment from 'moment';\r\nimport 'moment/locale/ru';\r\n\r\nexport default function DateTimePretty(Component) {\r\n  function NewDateTime(props) {\r\n    const date = moment(props.date, 'YYYYMMDDhhmm').fromNow()\r\n    return <Component url={props.url} date={date} />\r\n  }\r\n  return NewDateTime;\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}